<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>